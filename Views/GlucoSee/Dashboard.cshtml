@* @model IEnumerable<GlucoSeeTracker.Models.Dashboard> *@
@model GlucoSeeTracker.Models.DashboardViewModel

<!DOCTYPE html>
@* <html lang="en"> *@

<html>
<head>
    <style>
        /* Header styling */
        .Header {
            padding: 10px 20px;
            border-bottom: 2px solid #483d8b; /* Deep purple border */
            display: flex;
            justify-content: space-around; /* Space items evenly */
            align-items: center; /* Center vertically */
        }

        /* Header items */
        .Header .header-item {
            font-weight: bold;
            color: #483d8b; /* Deep purple text color */
            font-size: 1.25rem;
        }

        /*buttons*/
        .btn {
            font-weight: bold;
            font-size: 1.25rem;
            color: white;
            background-color: #483d8b; /* Deep purple background */
            border: none;
            padding: 10px 10px;
            border-radius: 10px;
            cursor: pointer;
            border: 1px solid #ccc;
        }

        .btn:hover {
            background-color: #007bff; /* Blue hover color */
        }

        .Header .btn:first-child{
            margin-right: 5px;
            margin: 0;
        }
    </style>
</head>

<body>
    <nav class="Header">

        <span class="header-item">First Name: @(string.IsNullOrEmpty(Model.FirstName) ? "N/A" : Model.FirstName)</span>
        <span class="header-item">Last Name: @(string.IsNullOrEmpty(Model.LastName) ? "N/A" : Model.LastName)</span>
        <span class="header-item">Age: @(Model.Age > 0 ? Model.Age.ToString() : "N/A")</span>

        <button class="btn" type="button" onclick="location.href='@Url.Action("Update", "GlucoSee")'">Update</button>
        <!-- Logout button -->
        <button class="btn" type="button" onclick="location.href='@Url.Action("Index", "Home")'">Logout</button>
    </nav>

    <h2>Glucose Readings</h2>

    <button class="btn" type="button" onclick="location.href='@Url.Action("Add", "GlucoSee")'">Add New Reading</button>
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Glucose Level</th>
                <th>Date/Time</th>
                <th>Pre/Post Meal</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.AllReadings != null && Model.AllReadings.Any())
            {
                @foreach (var reading in Model.AllReadings)
                {
                    <tr>
                        <td>@reading.GlucoLevel</td>
                        <td>@reading.DateTime</td>
                        <td>@(reading.PrePostMeal == "Pre" ? "Pre-Meal" : "Post-Meal")</td>
                        <td>
                            <a asp-controller="GlucoSee" asp-action="Edit" asp-route-id="@reading.ReadingID">Edit</a>
                            <a asp-controller="GlucoSee" asp-action="Delete" asp-route-id="@reading.ReadingID">Delete</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3">No recent readings found.</td>
                </tr>
            }

        </tbody>
    </table>

</body>
</html>